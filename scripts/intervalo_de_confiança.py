import numpy as np
import scipy as sp
import scipy.stats as st
import matplotlib.pyplot as plt
import matplotlib.markers as marks
from pylab import rcParams, rc

rcParams['figure.figsize'] = 8.5, 5
rc('savefig', format='pdf')

conjunto = np.array([["2.728093", "2.72829", "2.73338", "2.73338", "2.815842"],
                      ["2.731663", "2.731816", "2.738502", "2.738645", "2.810458"],
                      ["2.72888", "2.729001", "2.730311", "2.730457", "2.882096"],
                      ["2.861556", "2.86171", "2.862934", "2.863122", "2.913792"],
                      ["2.779075", "2.77928", "2.782024", "2.78224", "2.825961"],
                      ["2.741803", "2.741992", "2.748074", "2.748285", "2.847242"],
                      ["2.722176", "2.722368", "2.72599", "2.726206", "2.806283"],
                      ["0.75087", "0.751089", "0.753449", "0.753677", "0.941424"],
                      ["2.761163", "2.761328", "2.77265", "2.772833", "2.93248"],
                      ["2.775727", "2.775912", "2.777703", "2.777939", "2.833715"]]).astype(float)

# Dados novos com o switch certo
# [[2.778438,2.778643,2.781387,2.781603,2.825324],
# [2.404103,2.404256,2.410942,2.411085,2.482898],
# [2.813748,2.813869,2.815179,2.815325,2.966964],
# [2.843967,2.844121,2.845345,2.845533,2.896203],
# [2.612127,2.612312,2.614103,2.614339,2.670115],
# [2.706272,2.706469,2.711559,2.711787,2.794021],
# [2.745155,2.745344,2.751426,2.751637,2.850594],
# [0.827742,0.827961,0.830321,0.830549,1.0193],
# [2.73959,2.739755,2.751077,2.75126,2.910907],
# [2.725538,2.72573,2.729352,2.729568,2.809645]]

2.33947,2.778438,2.778643,2.781387,2.781603,2.825324
2.294949,2.404103,2.404256,2.410942,2.411085,2.482898
2.305951,2.813748,2.813869,2.815179,2.815325,2.966964
2.359148,2.843967,2.844121,2.845345,2.845533,2.896203
2.309009,2.612127,2.612312,2.614103,2.614339,2.670115
2.324314,2.706272,2.706469,2.711559,2.711787,2.794021
2.360099,2.745155,2.745344,2.751426,2.751637,2.850594
0.781178,0.827742,0.827961,0.830321,0.830549,1.0193
2.312106,2.73959,2.739755,2.751077,2.75126,2.910907
2.312194,2.725538,2.72573,2.729352,2.729568,2.809645



conjunto1 = np.array([[5.867958, 5.86821, 5.869559, 5.869797, 16.059198],
                     [5.311226, 5.311495, 5.320825, 5.321061, 5.422462],
                     [0.980538, 0.980754, 0.987839, 0.988057, 1.040599],
                     [10.720196, 10.72046, 10.725284, 10.72553, 24.892231],
                     [6.078391, 6.07861, 6.080477, 6.080665, 6.169998],
                     [2.666129, 2.666371, 2.668928, 2.669208, 9.833618],
                     [6.040911, 6.04119, 6.057306, 6.057544, 6.122414],
                     [10.914837, 10.91502, 10.920506, 10.920716, 30.95975],
                     [3.67316, 3.673422, 3.675288, 3.675523, 3.730182],
                     [3.163278, 3.163523, 3.167415, 3.167676, 3.236422]])

print(conjunto)
# calcular a matriz média
media = conjunto.mean(axis=0)
print('media:{}'.format(media))

desvio_padrao = conjunto.std(axis=0)

print('st: {}'.format(st.sem(conjunto,axis=0)))
print('desvio padrao:{}'.format(desvio_padrao))
conf_int = st.norm.interval(0.95, loc=media, scale=st.sem(conjunto,axis=0))

print("intervalo de confiança: ")
print(conf_int)

labels = ["ROLE REQUEST",
          "ROLE REPLY",
          "MULTIPART REQUEST",
          "MULTIPART REPLY",
          "PACKET OUT"]

# plt.plot(media, labels, marker="s")
# plt.ylim(2.7, 3)
# plt.yscale('linear')
plt.ylabel("Tempo (s)")
plt.xlabel("Evento")
# plt.xticks(rotation=45)
# plt.show()


colors=["red", "green", "blue", "purple", "yellow"]
plt.bar(labels, media, yerr=desvio_padrao, align='center', alpha=0.5, color=colors, capsize= 5)

plt.ylabel("Tempo (s)")
plt.xlabel("Evento")
plt.ylim(top=21)
plt.savefig('../teste.pdf')
plt.show()
#
#
# plt.errorbar(x=labels, y=media, yerr=conf_int, color="black", capsize=3,
#              linestyle="None",
#              marker="s", markersize=7, mfc="black", mec="black")
# plt.show()
